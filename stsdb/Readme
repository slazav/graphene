=========================================================================
STSDB -- a simple time-series database

Source code: https://github.com/slazav/stsdb
E-mail: Vladislav Zavjalov <slazav@altlinux.org>

=========================================================================
    Data storage

Each dataset is a separate BerkleyDB file with .db extension, located in
a database directory (default /var/lib/stsdb). Name of file represents
the name of the dataset. Name may contain path, but "." and
".." path components are always removed.

Data are stored as a set of sorted key-value pairs. Key is time in
milliseconds (64 bit unsigned integer), counted from 1970-01-01 UTC.
Duplicated time values are allowed. Value can contain an array if
numbers of arbitrary length (data columns) or some text. The data format
can be chosen during the database creation. Possible variants are: TEXT,
INT8, UINT8, INT16, UINT16, INT32, UINT32, INT64, UINT64, FLOAT, DOUBLE.

Records with 1-byte keys are reserved for database information,
for example the data format and database description.
Records with 2-byte keys are reserved for arbitrary user data.
1- and 2-bytes records are not affected by regular get/put commands.

=========================================================================
    Command line interface to data

The program stsdb is used to access data from command line.
Usage: stsdb [options] <command> <parameters>

    Options:

-d <path> -- database directory (default /var/lib/stsdb/)
-h        -- write this help message and exit

    Commands for manipulating databases:

stsdb create <name> [<data_fmt>] [<description>]  -- create a database
stsdb delete <name>                  -- delete a database file
stsdb rename <old_name> <new_name>   -- rename a database file
stsdb set_descr <name> <description> -- change database description
stsdb info <name>                    -- print database information
stsdb list                           -- list all databases in the data directory

Delete and rename commands just do simple file operations.
A database can not be renamed only if destination file exists.

    Commands for reading and writing data:

stsdb put <name> <time> <value1> ... <valueN> -- write data point
stsdb get_next <name>[:N] [<time1>] -- get next point with t>=time1
stsdb get_prev <name>[:N] [<time2>] -- get previous point with t<=time2
stsdb get_interp <name>[:N] <time>  -- get interpolated point
stsdb get_range  <name>[:N] [<time1>] [<time2>] [<dt>]
                                    -- get all points in the time range
                                       if dt>1 then filter data

In get_* commands the database name can be followed by column number.
Default value for time1 is 0, for time2 is infinity. Word "now" can be used
to specify current time. If the database has no future timestamps,
then commands "get_prev name" and "get_prev name now" are equivalent.

If a certain column is requested but data array is not long enough,
a "NaN" value is returned. Columns are ignored for text data.

get_interp does not work with text data. It always prints float values,
even for integer data.

Text values are printed with linebreaks converted to spaces.

    Commands for deleting data:

stsdb del <name> <time>  -- delete a data point
stsdb del_range  <name> [<time1>] [<time2>] -- delete all points in the range


TODO:
stsdb access -- Interactively read/write data. Allows writing of
multiple points without reopening the database. Allows making a simple
server with xinetd.

    Examples:

See examples/ folder in the database distriution


=========================================================================
    HTTP + Simple JSON interface

The simple JSON interface can be used with grafana frontend to access
data (simple_json plugin is needed). Text databases can be viewed as
annotations, and numerical as metrics. Columns can be specified after
database name: <name>:<column>, default column is 0.

Usage: stsdb_http [options]
Options:p
 -p <port> -- tcp port for connections (default 8081)
 -d <path> -- database path (default /var/lib/stsdb/)
 -v        -- be verbose (show requests, input and output)
 -h        -- write this help message and exit

=========================================================================
    Matlab interface

=========================================================================
