STSDB -- a simple time-series database

=========================================================================
    Data storage

A dataset is a separate BerkleyDB file with .db extension, located in a
database directory (default /var/lib/stsdb/). Name of file represents
the name of the dataset. One can rename, copy, delete files if needed.
Each dataset has information about time format (S or MS), data format
and a description text. Information is stored somewhere in the database
when one is created. One can change description text via stsdb command
line interface.

Data are stored in databases as a set of sorted key-value pairs. Key is
time in seconds (32 bit unsigned integer) or milliseconds (64 bit
unsigned integer not smaller then 2^32). Time is counted from
1970-01-01. Time format can be chosen when the database is created. All
time values are converted to the correct format automatically.
Duplicated time values are allowed.

Value can carry some text or an array if numbers of arbitrary length
(data columns). The data format can be chosen during the database
creation. Possible variants are: TEXT, INT8, UINT8, INT16, UINT16,
INT32, UINT32, INT64, UINT64, FLOAT, DOUBLE.

=========================================================================
    Command line interface to data

The program stsdb is used to access data from command line.
Usage: stsdb [options] <command> <parameters>

    Options:

-d <path> -- database directory (default /var/lib/stsdb/)
-h        -- write this help message and exit

    Commands:

stsdb create <name> <time_fmt> <data_fmt> <description>  -- create a database
stsdb delete <name>                  -- delete a database file
stsdb rename <old_name> <new_name>   -- rename a database file
stsdb set_descr <name> <description> -- change database description
stsdb info <name>                    -- print database information
stsdb list                           -- list all databases in the data folder

-- TEST_NEEDED:
stsdb put <name> <time> <value1> ... <valueN> -- write data point

-- TODO:
stsdb get_next <name>[:N] [<time1>] -- get next point after time1
stsdb get_prev <name>[:N] [<time2>] -- get previous point before time2
stsdb get_interp <name>[:N] <time>  -- get interpolated point
stsdb get_range  <name>[:N] [<time1>] [<time2>] [<dt>]
                                    -- get all points in the time range

In get_* commands the database name can be followed by column number.
Default value for time1 is 0, for time2 is NOW.

stsdb access -- Interactively read/write data. Allows writing of
multiple points without reopening the database. Allows making a simple
server using xinetd.

    Examples:

$ stsdb create pressure 1S DOUBLE "Measured pressure"

$ stsdb delete pressure

$ stsdb rename pressure press

$ stsdb set_descr press "New description"

$ stsdb info pressure "New description"
1S	DOUBLE	Measured pressure

$ stsdb list
press
temperature
level

=========================================================================
    Simple JSON interface

The simple JSON interface can be used with grafana frontend to access
data

=========================================================================
    Matlab interface

=========================================================================
